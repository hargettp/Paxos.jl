var documenterSearchIndex = {"docs":
[{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]\nOrder = [:module]","category":"page"},{"location":"clients/#Paxos.Clients","page":"Clients","title":"Paxos.Clients","text":"Data types and functions for Clients of a Paxos cluster.\n\n\n\n\n\n","category":"module"},{"location":"clients/#Contents-1","page":"Clients","title":"Contents","text":"","category":"section"},{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]\nPages = [\"clients.md\"]\nDepth = 2","category":"page"},{"location":"clients/#Functions-1","page":"Clients","title":"Functions","text":"","category":"section"},{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]\nOrder = [:function]","category":"page"},{"location":"clients/#Paxos.Clients.invoke-Tuple{Paxos.Clients.Client,Any,Union{Paxos.Ballots.Operation, Paxos.Configurations.OrdinaryConfiguration, Paxos.Configurations.TransitionConfiguration}}","page":"Clients","title":"Paxos.Clients.invoke","text":"Invoke the indicated Commmand, regulated by consensus to ensure consistent ordering across all members.\n\n\n\n\n\n","category":"method"},{"location":"clients/#Macros-1","page":"Clients","title":"Macros","text":"","category":"section"},{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]\nOrder = [:macro]","category":"page"},{"location":"clients/#Types-1","page":"Clients","title":"Types","text":"","category":"section"},{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]\nOrder = [:type]","category":"page"},{"location":"clients/#Constants-1","page":"Clients","title":"Constants","text":"","category":"section"},{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]\nOrder = [:constant]","category":"page"},{"location":"clients/#Index-1","page":"Clients","title":"Index","text":"","category":"section"},{"location":"clients/#","page":"Clients","title":"Clients","text":"Modules = [Paxos.Clients]","category":"page"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]\nOrder = [:module]","category":"page"},{"location":"transports_common/#Contents-1","page":"Common Definitions","title":"Contents","text":"","category":"section"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]\nPages = [\"transports_common.md\"]\nDepth = 2","category":"page"},{"location":"transports_common/#Functions-1","page":"Common Definitions","title":"Functions","text":"","category":"section"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]\nOrder = [:function]","category":"page"},{"location":"transports_common/#Paxos.Transports.Common.call-Tuple{Paxos.Transports.Common.Messenger,Any,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.call","text":"Send a message through the specified Messenger, and wait up to timeout seconds for a response. If no response received in the alloted time, then throw a TimeoutException; otherwise, return the reeived response.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.callAny-Tuple{Paxos.Transports.Common.Transport,Union{Nothing, Paxos.Transports.Common.Messenger},Any,Any,Paxos.Transports.Common.Message}","page":"Common Definitions","title":"Paxos.Transports.Common.callAny","text":"Call the messengers in order with the message, returning after the first messenger that responds without an exception. No other messengers after the first successful call will receive the message.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.connectAll-Tuple{Paxos.Transports.Common.Connections,Any,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.connectAll","text":"Asynchronously connect to as many destination addresses as possible,  ignoring exceptions if encountered\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.connectOne-Tuple{Paxos.Transports.Common.Connections,Any,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.connectOne","text":"Create a connection to the address and if successful retain it in connections\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.connectTo-Tuple{Paxos.Transports.Common.Transport,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.connectTo","text":"Create a connection (if one is possible) that enables sending and receiving messages to the recipient. The provided handler should take 1 argument, a Connection for sending or receiving messages with the recipient.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.connection-Tuple{Function,Paxos.Transports.Common.Transport,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.connection","text":"Create a Connection to the recepient and a Messenger to exchange messages, then invoke the handler with the Messenger as an argument. Close the messenger as soon as the connection exits.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.gcall-Tuple{Any,Any,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.gcall","text":"Send the message through each of the Messengers, but only allow timeout seconds for a response. Return all results received within the alloted time, if any.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.listenOn-Tuple{Function,Paxos.Transports.Common.Transport,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.listenOn","text":"Listen for incoming connections and invoke the indicated function when they appear. Returns a Listener. The provided handler should take 1 argument, a Connection; a new handler will be created for each connection accepted by the listener. A listener\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.listener-Tuple{Function,Paxos.Transports.Common.Transport,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.listener","text":"Create a listener on the underlying transport at the indicated address, invoking the handler for each Connection discveroed. A listner should be closed when no longer needed, to free up resources\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.messengerTo-Tuple{Any,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.messengerTo","text":"Connect to the recipient via the underlying transport and construct a Messenger with the resulting Connection\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.receivedMessages-Tuple{Paxos.Transports.Common.Messenger}","page":"Common Definitions","title":"Paxos.Transports.Common.receivedMessages","text":"Return a channel for processing messages received on the Messenger\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.sendMessage-Tuple{Paxos.Transports.Common.Messenger,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.sendMessage","text":"Enqueue message for sending over the transport connection\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.sendTo-Tuple{Paxos.Transports.Common.Connection,Any}","page":"Common Definitions","title":"Paxos.Transports.Common.sendTo","text":"Send a message on the indicated connection\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Base.close-Tuple{Paxos.Transports.Common.Connection}","page":"Common Definitions","title":"Base.close","text":"Close the connection, freeing resources associated with itâ€“and stopping any tasks moving data on the connection.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.messageReceiver-Tuple{Paxos.Transports.Common.Connection,Channel,Channel}","page":"Common Definitions","title":"Paxos.Transports.Common.messageReceiver","text":"Continuously receive messages over the connection and places them in the  messenger's inbound channel, until the messenger is closed.\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.messageSender-Tuple{Paxos.Transports.Common.Connection,Channel,Channel}","page":"Common Definitions","title":"Paxos.Transports.Common.messageSender","text":"Continously send any messages on the messenger's outbound channel, until the messenger is closed\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.receiveFrom-Tuple{Paxos.Transports.Common.Connection}","page":"Common Definitions","title":"Paxos.Transports.Common.receiveFrom","text":"Receive a message over the indicated connection\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Macros-1","page":"Common Definitions","title":"Macros","text":"","category":"section"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]\nOrder = [:macro]","category":"page"},{"location":"transports_common/#Types-1","page":"Common Definitions","title":"Types","text":"","category":"section"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]\nOrder = [:type]","category":"page"},{"location":"transports_common/#Paxos.Transports.Common.Connection","page":"Common Definitions","title":"Paxos.Transports.Common.Connection","text":"A Connection represents a conduit between a source and a destination: messages may be sent to the destination from the source, and optionally they may also be received from the destination to the source. Closing a connection prevents further message exchange using the connection.\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Paxos.Transports.Common.Listener","page":"Common Definitions","title":"Paxos.Transports.Common.Listener","text":"A listener is typically a task that is awaiting incoming connections; closing a listener will prevent further connections to that listener.\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Paxos.Transports.Common.Message","page":"Common Definitions","title":"Paxos.Transports.Common.Message","text":"An abstract payload for sending data via a Transport\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Paxos.Transports.Common.Messenger","page":"Common Definitions","title":"Paxos.Transports.Common.Messenger","text":"A messenger handles asynchronous transmission / reception of messages over a Connection, until closed. In addition to stopping the tasks for transmission / reception, closing the messenger also closes the underlying connection.\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Paxos.Transports.Common.Messenger-Tuple{Any}","page":"Common Definitions","title":"Paxos.Transports.Common.Messenger","text":"Construct a messenger for the given resource\n\n\n\n\n\n","category":"method"},{"location":"transports_common/#Paxos.Transports.Common.Transport","page":"Common Definitions","title":"Paxos.Transports.Common.Transport","text":"A Transport delivers messages sent to groups or individual recipients\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Paxos.Transports.Common.ListenerClosedException","page":"Common Definitions","title":"Paxos.Transports.Common.ListenerClosedException","text":"Exception sent to a listener to indicate that it has been closed\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Paxos.Transports.Common.NoAvailableServerException","page":"Common Definitions","title":"Paxos.Transports.Common.NoAvailableServerException","text":"Exception thrown when there is no server that can respond to a client request\n\n\n\n\n\n","category":"type"},{"location":"transports_common/#Constants-1","page":"Common Definitions","title":"Constants","text":"","category":"section"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]\nOrder = [:constant]","category":"page"},{"location":"transports_common/#Index-1","page":"Common Definitions","title":"Index","text":"","category":"section"},{"location":"transports_common/#","page":"Common Definitions","title":"Common Definitions","text":"Modules = [Paxos.Transports.Common]","category":"page"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]\nOrder = [:module]","category":"page"},{"location":"ballots/#Paxos.Ballots","page":"Ballots","title":"Paxos.Ballots","text":"Basic types and functions to support Ballots, a fundamental unit of data exchange for successful Paxos execution.\n\n\n\n\n\n","category":"module"},{"location":"ballots/#Contents-1","page":"Ballots","title":"Contents","text":"","category":"section"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]\nPages = [\"ballots.md\"]\nDepth = 2","category":"page"},{"location":"ballots/#Functions-1","page":"Ballots","title":"Functions","text":"","category":"section"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]\nOrder = [:function]","category":"page"},{"location":"ballots/#Paxos.Ballots.after-Tuple{Any,Any}","page":"Ballots","title":"Paxos.Ballots.after","text":"Return true if the left id refers to an instance that occurs later than   the right; otherwise, return true\n\n\n\n\n\n","category":"method"},{"location":"ballots/#Paxos.Ballots.before-Tuple{UInt128,UInt128}","page":"Ballots","title":"Paxos.Ballots.before","text":"Return true if the left id refers to an instance that occurs earlier than the right; otherwise, return false\n\n\n\n\n\n","category":"method"},{"location":"ballots/#Macros-1","page":"Ballots","title":"Macros","text":"","category":"section"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]\nOrder = [:macro]","category":"page"},{"location":"ballots/#Types-1","page":"Ballots","title":"Types","text":"","category":"section"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]\nOrder = [:type]","category":"page"},{"location":"ballots/#Paxos.Ballots.InstanceID","page":"Ballots","title":"Paxos.Ballots.InstanceID","text":"An InstanceID uniquely names a specific instance of the Paxos algorithm. Ballots occur within a specific instance, with the ultimate goal of  choosing a ballot by consensus.\n\nInstanceIDs are ordered, with \"earlier\" instances coming before later ones. The ordering is intended to support ordering instances (and their chosen ballot) into an ordered ledger of chosen commands.\n\n\n\n\n\n","category":"type"},{"location":"ballots/#Paxos.Ballots.Promise","page":"Ballots","title":"Paxos.Ballots.Promise","text":"A Promise is a message from a member committing to a specific Ballot, and agreeing not to make a similar promise for any ballot in the same instance but with a lower sequence number.\n\n\n\n\n\n","category":"type"},{"location":"ballots/#Constants-1","page":"Ballots","title":"Constants","text":"","category":"section"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]\nOrder = [:constant]","category":"page"},{"location":"ballots/#Index-1","page":"Ballots","title":"Index","text":"","category":"section"},{"location":"ballots/#","page":"Ballots","title":"Ballots","text":"Modules = [Paxos.Ballots]","category":"page"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]\nOrder = [:module]","category":"page"},{"location":"leaders/#Contents-1","page":"Leaders","title":"Contents","text":"","category":"section"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]\nPages = [\"leaders.md\"]\nDepth = 2","category":"page"},{"location":"leaders/#Functions-1","page":"Leaders","title":"Functions","text":"","category":"section"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]\nOrder = [:function]","category":"page"},{"location":"leaders/#Paxos.Leaders.proposeBallots-Tuple{Paxos.Protocols.Cluster,Paxos.Leaders.Leader,Dict{UInt128,Paxos.Ballots.Ballot}}","page":"Leaders","title":"Paxos.Leaders.proposeBallots","text":"Execute the propose phase, and collect results. For each instance, find the sequence number chosen by the most members, and then make sure that there was a quorum that voted for that sequence number. Once found, build a map to associate instance IDs to the chosen ballot number.\n\n\n\n\n\n","category":"method"},{"location":"leaders/#Macros-1","page":"Leaders","title":"Macros","text":"","category":"section"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]\nOrder = [:macro]","category":"page"},{"location":"leaders/#Types-1","page":"Leaders","title":"Types","text":"","category":"section"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]\nOrder = [:type]","category":"page"},{"location":"leaders/#Constants-1","page":"Leaders","title":"Constants","text":"","category":"section"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]\nOrder = [:constant]","category":"page"},{"location":"leaders/#Index-1","page":"Leaders","title":"Index","text":"","category":"section"},{"location":"leaders/#","page":"Leaders","title":"Leaders","text":"Modules = [Paxos.Leaders]","category":"page"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]\nOrder = [:module]","category":"page"},{"location":"configurations/#Paxos.Configurations","page":"Configurations","title":"Paxos.Configurations","text":"Data types and functions support Configurations, which describe the participants in a Paxos cluster.\n\n\n\n\n\n","category":"module"},{"location":"configurations/#Contents-1","page":"Configurations","title":"Contents","text":"","category":"section"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]\nPages = [\"configurations.md\"]\nDepth = 2","category":"page"},{"location":"configurations/#Functions-1","page":"Configurations","title":"Functions","text":"","category":"section"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]\nOrder = [:function]","category":"page"},{"location":"configurations/#Paxos.Configurations.configuration","page":"Configurations","title":"Paxos.Configurations.configuration","text":"Create a new, empty OrdinaryConfiguration\n\n\n\n\n\n","category":"function"},{"location":"configurations/#Paxos.Configurations.isquorum-Tuple{Paxos.Configurations.OrdinaryConfiguration,Set{Base.UUID}}","page":"Configurations","title":"Paxos.Configurations.isquorum","text":"Return true if the list of members represents a quorum for the configuration\n\n\n\n\n\n","category":"method"},{"location":"configurations/#Paxos.Configurations.isquorum-Tuple{Paxos.Configurations.TransitionConfiguration,Set{Base.UUID}}","page":"Configurations","title":"Paxos.Configurations.isquorum","text":"During transitions, eturn true if the list of members represents a quorum in  both old and new configurations\n\n\n\n\n\n","category":"method"},{"location":"configurations/#Paxos.Configurations.memberAddress-Tuple{Paxos.Configurations.OrdinaryConfiguration,Base.UUID}","page":"Configurations","title":"Paxos.Configurations.memberAddress","text":"Return the address for the specfied node, or error if no such address\n\n\n\n\n\n","category":"method"},{"location":"configurations/#Paxos.Configurations.memberAddresses-Tuple{Paxos.Configurations.OrdinaryConfiguration}","page":"Configurations","title":"Paxos.Configurations.memberAddresses","text":"Return the addresses of all membes in the configuration\n\n\n\n\n\n","category":"method"},{"location":"configurations/#Paxos.Configurations.quorumSize-Tuple{Integer}","page":"Configurations","title":"Paxos.Configurations.quorumSize","text":"For Integer values, return the required number of participants for a majority\n\n\n\n\n\n","category":"method"},{"location":"configurations/#Paxos.Configurations.quorumSize-Tuple{Paxos.Configurations.OrdinaryConfiguration}","page":"Configurations","title":"Paxos.Configurations.quorumSize","text":"Return the minimum size for a majority of members in the configuration\n\n\n\n\n\n","category":"method"},{"location":"configurations/#Macros-1","page":"Configurations","title":"Macros","text":"","category":"section"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]\nOrder = [:macro]","category":"page"},{"location":"configurations/#Types-1","page":"Configurations","title":"Types","text":"","category":"section"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]\nOrder = [:type]","category":"page"},{"location":"configurations/#Paxos.Configurations.NoQuorumAvailableException","page":"Configurations","title":"Paxos.Configurations.NoQuorumAvailableException","text":"Exception thrown when no quorum is available to respond to Paxos messages\n\n\n\n\n\n","category":"type"},{"location":"configurations/#Paxos.Configurations.TransitionConfiguration","page":"Configurations","title":"Paxos.Configurations.TransitionConfiguration","text":"A transition configuration (inspired by Raft) supports rollout of a  new configuration, with potentially differences in membership\n\n\n\n\n\n","category":"type"},{"location":"configurations/#Constants-1","page":"Configurations","title":"Constants","text":"","category":"section"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]\nOrder = [:constant]","category":"page"},{"location":"configurations/#Paxos.Configurations.Configuration","page":"Configurations","title":"Paxos.Configurations.Configuration","text":"A configuration is the general type for maintaining a list of menbers and addreses where they can be reached over transport\n\n\n\n\n\n","category":"constant"},{"location":"configurations/#Index-1","page":"Configurations","title":"Index","text":"","category":"section"},{"location":"configurations/#","page":"Configurations","title":"Configurations","text":"Modules = [Paxos.Configurations]","category":"page"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]\nOrder = [:module]","category":"page"},{"location":"transports_tcp/#Contents-1","page":"TCP","title":"Contents","text":"","category":"section"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]\nPages = [\"transports_tcp.md\"]\nDepth = 2","category":"page"},{"location":"transports_tcp/#Functions-1","page":"TCP","title":"Functions","text":"","category":"section"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]\nOrder = [:function]","category":"page"},{"location":"transports_tcp/#Paxos.Transports.Common.connectTo-Tuple{Paxos.Transports.TCP.TCPTransport,Any}","page":"TCP","title":"Paxos.Transports.Common.connectTo","text":"Create a connection (if one is possible) that enables sending and receiving messages to the recipient. The provided handler should take 1 argument, a Connection for sending or receiving messages with the recipient.\n\n\n\n\n\n","category":"method"},{"location":"transports_tcp/#Paxos.Transports.Common.listenOn-Tuple{Function,Paxos.Transports.TCP.TCPTransport,Any}","page":"TCP","title":"Paxos.Transports.Common.listenOn","text":"Listen for incoming connections and invoke the indicated function when they appear. Returns a Listener\n\n\n\n\n\n","category":"method"},{"location":"transports_tcp/#Paxos.Transports.Common.receiveFrom-Tuple{Paxos.Transports.TCP.TCPConnection}","page":"TCP","title":"Paxos.Transports.Common.receiveFrom","text":"Receive a message over the indicated connection\n\n\n\n\n\n","category":"method"},{"location":"transports_tcp/#Paxos.Transports.Common.sendTo-Tuple{Paxos.Transports.TCP.TCPConnection,Any}","page":"TCP","title":"Paxos.Transports.Common.sendTo","text":"Send a message on the indicated connection, using the specified Transport\n\n\n\n\n\n","category":"method"},{"location":"transports_tcp/#Macros-1","page":"TCP","title":"Macros","text":"","category":"section"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]\nOrder = [:macro]","category":"page"},{"location":"transports_tcp/#Types-1","page":"TCP","title":"Types","text":"","category":"section"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]\nOrder = [:type]","category":"page"},{"location":"transports_tcp/#Constants-1","page":"TCP","title":"Constants","text":"","category":"section"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]\nOrder = [:constant]","category":"page"},{"location":"transports_tcp/#Index-1","page":"TCP","title":"Index","text":"","category":"section"},{"location":"transports_tcp/#","page":"TCP","title":"TCP","text":"Modules = [Paxos.Transports.TCP]","category":"page"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]\nOrder = [:module]","category":"page"},{"location":"utils/#Contents-1","page":"Utils","title":"Contents","text":"","category":"section"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]\nPages = [\"utils.md\"]\nDepth = 2","category":"page"},{"location":"utils/#Functions-1","page":"Utils","title":"Functions","text":"","category":"section"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]\nOrder = [:function]","category":"page"},{"location":"utils/#Paxos.Utils.bounded-Tuple{Any,Any}","page":"Utils","title":"Paxos.Utils.bounded","text":"Execute the provided expression fn in a separate task, waiting at most timeout seconds (using sleep). If the task does not complete in the alloted time, then abort the task and throw a TimeoutException to the caller of this function.\n\n\n\n\n\n","category":"method"},{"location":"utils/#Paxos.Utils.compact-Tuple{Any}","page":"Utils","title":"Paxos.Utils.compact","text":"Return an iterator that skips any nothing results from the underlying itetator\n\n\n\n\n\n","category":"method"},{"location":"utils/#Paxos.Utils.groupBy","page":"Utils","title":"Paxos.Utils.groupBy","text":"Return a Dict whose keys are the unique values of the supplied function fn, and the values are those items in the original collection for which the supplied function returned that result.\n\n\n\n\n\n","category":"function"},{"location":"utils/#Paxos.Utils.identity-Tuple{Any}","page":"Utils","title":"Paxos.Utils.identity","text":"Simple identity function: returns its arguments\n\n\n\n\n\n","category":"method"},{"location":"utils/#Paxos.Utils.maxBy","page":"Utils","title":"Paxos.Utils.maxBy","text":"Return the item with the maximum value by comparising the value returned by the supplied function fn against other values in the collection using <\n\n\n\n\n\n","category":"function"},{"location":"utils/#Paxos.Utils.readAvailable-Tuple{Channel}","page":"Utils","title":"Paxos.Utils.readAvailable","text":"Reads all available messages on the Channel, returning an array\n\n\n\n\n\n","category":"method"},{"location":"utils/#Macros-1","page":"Utils","title":"Macros","text":"","category":"section"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]\nOrder = [:macro]","category":"page"},{"location":"utils/#Types-1","page":"Utils","title":"Types","text":"","category":"section"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]\nOrder = [:type]","category":"page"},{"location":"utils/#Paxos.Utils.TimeoutException","page":"Utils","title":"Paxos.Utils.TimeoutException","text":"An exception thrown if a block invoked with bounded did not complete in the specified time.\n\n\n\n\n\n","category":"type"},{"location":"utils/#Constants-1","page":"Utils","title":"Constants","text":"","category":"section"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]\nOrder = [:constant]","category":"page"},{"location":"utils/#Index-1","page":"Utils","title":"Index","text":"","category":"section"},{"location":"utils/#","page":"Utils","title":"Utils","text":"Modules = [Paxos.Utils]","category":"page"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]\nOrder = [:module]","category":"page"},{"location":"ledgers/#Contents-1","page":"Ledgers","title":"Contents","text":"","category":"section"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]\nPages = [\"ledgers.md\"]\nDepth = 2","category":"page"},{"location":"ledgers/#Functions-1","page":"Ledgers","title":"Functions","text":"","category":"section"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]\nOrder = [:function]","category":"page"},{"location":"ledgers/#Paxos.Ledgers.nextBallotNumber!","page":"Ledgers","title":"Paxos.Ledgers.nextBallotNumber!","text":"Create a ballot number for an instance\n\n\n\n\n\n","category":"function"},{"location":"ledgers/#Paxos.Ledgers.nextInstance-Tuple{Paxos.Ledgers.Ledger}","page":"Ledgers","title":"Paxos.Ledgers.nextInstance","text":"Return the next unused instance (actually, the next unused index) in the ledger\n\n\n\n\n\n","category":"method"},{"location":"ledgers/#Paxos.Ledgers.prepare!-Tuple{Paxos.Ledgers.Ledger,Dict{UInt128,Paxos.Ballots.Ballot}}","page":"Ledgers","title":"Paxos.Ledgers.prepare!","text":"Record choices for each instance in ballots\n\n\n\n\n\n","category":"method"},{"location":"ledgers/#Paxos.Ledgers.request!-Tuple{Paxos.Ledgers.Ledger,Base.UUID,Paxos.Ballots.Request}","page":"Ledgers","title":"Paxos.Ledgers.request!","text":"Given a Request, add to the ledger as a new entry (and ballot) in the entryRequested state. Return the resulting Ballot created as a result.\n\n\n\n\n\n","category":"method"},{"location":"ledgers/#Paxos.Ledgers.votes!-Tuple{Paxos.Ledgers.Ledger,Array{Paxos.Ballots.BallotNumber,1}}","page":"Ledgers","title":"Paxos.Ledgers.votes!","text":"Compute a ballot number corresponding to the highest sequence number seen for each instance. This is useful for the \"propose\" phase of the protocol.\n\n\n\n\n\n","category":"method"},{"location":"ledgers/#Base.isready-Tuple{Paxos.Ledgers.Ledger}","page":"Ledgers","title":"Base.isready","text":"Return true if the ledger is not empty and has unapplied entries, false otherwise\n\n\n\n\n\n","category":"method"},{"location":"ledgers/#Macros-1","page":"Ledgers","title":"Macros","text":"","category":"section"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]\nOrder = [:macro]","category":"page"},{"location":"ledgers/#Types-1","page":"Ledgers","title":"Types","text":"","category":"section"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]\nOrder = [:type]","category":"page"},{"location":"ledgers/#Paxos.Ledgers.Ledger","page":"Ledgers","title":"Paxos.Ledgers.Ledger","text":"A ledger is a record of Commands to apply to an external data structure or state machine. A ledger is structured as a sequence of LedgerEntry objects.\n\n\n\n\n\n","category":"type"},{"location":"ledgers/#Paxos.Ledgers.LedgerEntry","page":"Ledgers","title":"Paxos.Ledgers.LedgerEntry","text":"A LedgerEntry captures the state of a Command to apply to a Ledgers external model or state machine. Conveniently, a ledger entry has a structure suitable for use as a \"ledger\" for 1 instance of the Paxos algorithm: as ballots for that instance progress the entry contains the state needed for a leader, follower, or learner to move towards an outcome or final ballot containing the chosen command for application.\n\n\n\n\n\n","category":"type"},{"location":"ledgers/#Paxos.Ledgers.LedgerEntryState","page":"Ledgers","title":"Paxos.Ledgers.LedgerEntryState","text":"open - The entry is new, and has not been populated by any ballot activity\n\nrequested - The entry corresponds to a local request ready to be prepared.\n\nprepared - The entry was discovered through an initial Prepare phase\n\npromised- Once promised, only requests with a higher ballot can replace the request in the entry\n\naccepted - An accepted entry will eventually by accepted by all members of the cluster\n\napplied - The underlying command in the entry's request has been applied to application state\n\n\n\n\n\n","category":"type"},{"location":"ledgers/#Constants-1","page":"Ledgers","title":"Constants","text":"","category":"section"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]\nOrder = [:constant]","category":"page"},{"location":"ledgers/#Index-1","page":"Ledgers","title":"Index","text":"","category":"section"},{"location":"ledgers/#","page":"Ledgers","title":"Ledgers","text":"Modules = [Paxos.Ledgers]","category":"page"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]\nOrder = [:module]","category":"page"},{"location":"nodes/#Contents-1","page":"Nodes","title":"Contents","text":"","category":"section"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]\nPages = [\"nodes.md\"]\nDepth = 2","category":"page"},{"location":"nodes/#Functions-1","page":"Nodes","title":"Functions","text":"","category":"section"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]\nOrder = [:function]","category":"page"},{"location":"nodes/#Paxos.Nodes.nodeid-Tuple{}","page":"Nodes","title":"Paxos.Nodes.nodeid","text":"Return a new node ID\n\n\n\n\n\n","category":"method"},{"location":"nodes/#Macros-1","page":"Nodes","title":"Macros","text":"","category":"section"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]\nOrder = [:macro]","category":"page"},{"location":"nodes/#Types-1","page":"Nodes","title":"Types","text":"","category":"section"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]\nOrder = [:type]","category":"page"},{"location":"nodes/#Constants-1","page":"Nodes","title":"Constants","text":"","category":"section"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]\nOrder = [:constant]","category":"page"},{"location":"nodes/#Index-1","page":"Nodes","title":"Index","text":"","category":"section"},{"location":"nodes/#","page":"Nodes","title":"Nodes","text":"Modules = [Paxos.Nodes]","category":"page"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]\nOrder = [:module]","category":"page"},{"location":"transports_memory/#Contents-1","page":"Memory","title":"Contents","text":"","category":"section"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]\nPages = [\"transports_memory.md\"]\nDepth = 2","category":"page"},{"location":"transports_memory/#Functions-1","page":"Memory","title":"Functions","text":"","category":"section"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]\nOrder = [:function]","category":"page"},{"location":"transports_memory/#Paxos.Transports.Memory.memory-Tuple{}","page":"Memory","title":"Paxos.Transports.Memory.memory","text":"Create a new transport for passing messages within \n\n\n\n\n\n","category":"method"},{"location":"transports_memory/#Macros-1","page":"Memory","title":"Macros","text":"","category":"section"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]\nOrder = [:macro]","category":"page"},{"location":"transports_memory/#Types-1","page":"Memory","title":"Types","text":"","category":"section"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]\nOrder = [:type]","category":"page"},{"location":"transports_memory/#Constants-1","page":"Memory","title":"Constants","text":"","category":"section"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]\nOrder = [:constant]","category":"page"},{"location":"transports_memory/#Index-1","page":"Memory","title":"Index","text":"","category":"section"},{"location":"transports_memory/#","page":"Memory","title":"Memory","text":"Modules = [Paxos.Transports.Memory]","category":"page"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]\nOrder = [:module]","category":"page"},{"location":"protocols/#Contents-1","page":"Protocols","title":"Contents","text":"","category":"section"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]\nPages = [\"protocols.md\"]\nDepth = 2","category":"page"},{"location":"protocols/#Functions-1","page":"Protocols","title":"Functions","text":"","category":"section"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]\nOrder = [:function]","category":"page"},{"location":"protocols/#Paxos.Protocols.pcall-Tuple{Paxos.Protocols.Cluster,Any}","page":"Protocols","title":"Paxos.Protocols.pcall","text":"Perform a gcall against all members of the cluster, creating connections as needed (and as available), if not already present\n\n\n\n\n\n","category":"method"},{"location":"protocols/#Macros-1","page":"Protocols","title":"Macros","text":"","category":"section"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]\nOrder = [:macro]","category":"page"},{"location":"protocols/#Types-1","page":"Protocols","title":"Types","text":"","category":"section"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]\nOrder = [:type]","category":"page"},{"location":"protocols/#Constants-1","page":"Protocols","title":"Constants","text":"","category":"section"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]\nOrder = [:constant]","category":"page"},{"location":"protocols/#Index-1","page":"Protocols","title":"Index","text":"","category":"section"},{"location":"protocols/#","page":"Protocols","title":"Protocols","text":"Modules = [Paxos.Protocols]","category":"page"},{"location":"#Paxos-1","page":"Paxos","title":"Paxos","text":"","category":"section"},{"location":"#","page":"Paxos","title":"Paxos","text":"This package implements the Paxos algorithm.","category":"page"},{"location":"#Contents-1","page":"Paxos","title":"Contents","text":"","category":"section"},{"location":"#","page":"Paxos","title":"Paxos","text":"Pages = [\"index.md\"]\nDepth = 2","category":"page"},{"location":"#Modules-1","page":"Paxos","title":"Modules","text":"","category":"section"},{"location":"#","page":"Paxos","title":"Paxos","text":"Modules = [\n  Paxos.Ballots,\n  Paxos.Clients,\n  Paxos.Configurations,\n  Paxos.Leaders,\n  Paxos.Ledgers,\n  Paxos.Nodes,\n  Paxos.Protocols,\n  Paxos.Transports.Common,\n  Paxos.Transports.Memory,\n  Paxos.Transports.TCP,\n  Paxos.Utils\n  ]\nOrder = [:module]","category":"page"},{"location":"#Paxos.Leaders","page":"Paxos","title":"Paxos.Leaders","text":"Implementation of the leader side of the Paxos algorithm.\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Ledgers","page":"Paxos","title":"Paxos.Ledgers","text":"Data structure useful for tracking the state of one or more instances of the Paxos algorithm.\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Nodes","page":"Paxos","title":"Paxos.Nodes","text":"Basic types for identifying nodes participating in Paxos\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Protocols","page":"Paxos","title":"Paxos.Protocols","text":"Basic messages in the Paxos protocol.\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Transports.Common","page":"Paxos","title":"Paxos.Transports.Common","text":"Defintions common to all implementations of Transport.\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Transports.Memory","page":"Paxos","title":"Paxos.Transports.Memory","text":"Implementation of Paxos.Transports.Common.Transport for in-memory communication within the current process.\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Transports.TCP","page":"Paxos","title":"Paxos.Transports.TCP","text":"Implementation of Paxos.Transports.Common.Transport for TCP-based communication between participants.\n\n\n\n\n\n","category":"module"},{"location":"#Paxos.Utils","page":"Paxos","title":"Paxos.Utils","text":"Utility functions for Paxos\n\n\n\n\n\n","category":"module"},{"location":"#Index-1","page":"Paxos","title":"Index","text":"","category":"section"},{"location":"#","page":"Paxos","title":"Paxos","text":"Pages = [\"index.md]","category":"page"}]
}
